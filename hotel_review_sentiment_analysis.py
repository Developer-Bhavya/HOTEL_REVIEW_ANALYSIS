# -*- coding: utf-8 -*-
"""Hotel Review Sentiment Analysis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1g4RcfOC31ZWfM8-c19GfOsAMZCSQutBL
"""

!pip install pandas scikit-learn nltk transformers sentence-transformers
!pip install torch torchvision

!pip install keybert sentence-transformers

import pandas as pd
import numpy as np
import re
import nltk
import matplotlib.pyplot as plt
from transformers import pipeline
from keybert import KeyBERT
from nltk.corpus import stopwords
from collections import Counter

nltk.download('stopwords')
stop_words = set(stopwords.words('english'))

!pip install kaggle

from google.colab import files
files.upload()  # Upload your `kaggle.json` file here

!mkdir -p ~/.kaggle
!cp "kaggle (1).json" ~/.kaggle/kaggle.json
!chmod 600 ~/.kaggle/kaggle.json

!kaggle datasets download -d jiashenliu/515k-hotel-reviews-data-in-europe

!unzip -q 515k-hotel-reviews-data-in-europe.zip

import pandas as pd

# Load the CSV file
df = pd.read_csv("Hotel_Reviews.csv")

# Show first few rows
df.head()

# If you want to keep only the review comments (e.g., Negative + Positive)
df['review'] = df['Negative_Review'] + " " + df['Positive_Review']

# Drop empty reviews
df = df[df['review'].str.strip().astype(bool)]
df = df[['review']]  # Keep only the review column
df.head()

import re
import nltk
nltk.download('stopwords')
from nltk.corpus import stopwords

stop_words = set(stopwords.words('english'))

def clean_text(text):
    text = re.sub(r'[^a-zA-Z\s]', '', text)         # Remove punctuation & numbers
    text = text.lower()                             # Convert to lowercase
    words = text.split()
    words = [word for word in words if word not in stop_words]  # Remove stopwords
    return ' '.join(words)

df['clean_review'] = df['review'].astype(str).apply(clean_text)
df[['review', 'clean_review']].head()

from transformers import pipeline

sentiment_pipeline = pipeline("sentiment-analysis")

# Limit to first 1000 for speed â€” expand later
df_sample = df.head(1000).copy()

# Analyze sentiment
df_sample['sentiment'] = df_sample['clean_review'].apply(lambda x: sentiment_pipeline(x[:512])[0]['label'])

df_sample[['clean_review', 'sentiment']].head()

from keybert import KeyBERT
kw_model = KeyBERT()

def extract_keywords(text):
    keywords = kw_model.extract_keywords(text, top_n=5, stop_words='english')
    return [kw[0] for kw in keywords]

df_sample['topics'] = df_sample['clean_review'].apply(extract_keywords)
df_sample[['clean_review', 'sentiment', 'topics']].head()

import matplotlib.pyplot as plt

df_sample['sentiment'].value_counts().plot(kind='bar', title='Sentiment Distribution')
plt.show()

from collections import Counter

all_keywords = df_sample['topics'].explode().dropna()
top_keywords = Counter(all_keywords).most_common(15)

pd.DataFrame(top_keywords, columns=['Topic', 'Count']).plot(x='Topic', y='Count', kind='barh', title='Top Service Topics')
plt.show()

df_sample.to_csv('hotel_review_sentiment_output.csv', index=False)

# To download
from google.colab import files
files.download('hotel_review_sentiment_output.csv')